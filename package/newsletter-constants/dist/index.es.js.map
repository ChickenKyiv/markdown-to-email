{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["// @todo or expand this thing\r\n// this.rules =  [\r\n//   {regex: /(#+)(.*)/g, replacement: header},                                         // headers\r\n//   {regex: /!\\[([^\\[]+)\\]\\(([^\\)]+)\\)/g, replacement: '<img src=\\'$2\\' alt=\\'$1\\'>'}, // image\r\n//   {regex: /\\[([^\\[]+)\\]\\(([^\\)]+)\\)/g, replacement: '<a href=\\'$2\\'>$1</a>'},        // hyperlink\r\n//   {regex: /(\\*\\*|__)(.*?)\\1/g, replacement: '<strong>$2</strong>'},                  // bold\r\n//   {regex: /(\\*|_)(.*?)\\1/g, replacement: '<em>$2</em>'},                             // emphasis\r\n//   {regex: /\\~\\~(.*?)\\~\\~/g, replacement: '<del>$1</del>'},                           // del\r\n//   {regex: /\\:\\\"(.*?)\\\"\\:/g, replacement: '<q>$1</q>'},                               // quote\r\n//   {regex: /`(.*?)`/g, replacement: '<code>$1</code>'},                               // inline code\r\n//   {regex: /\\n\\*(.*)/g, replacement: ulList},                                         // ul lists\r\n//   {regex: /\\n[0-9]+\\.(.*)/g, replacement: olList},                                   // ol lists\r\n//   {regex: /\\n(&gt;|\\>)(.*)/g, replacement: blockquote},                              // blockquotes\r\n//   {regex: /\\n-{5,}/g, replacement: '\\n<hr />'},                                      // horizontal rule\r\n//   {regex: /\\n([^\\n]+)\\n/g, replacement: para},                                       // add paragraphs\r\n//   {regex: /<\\/ul>\\s?<ul>/g, replacement: ''},                                        // fix extra ul\r\n//   {regex: /<\\/ol>\\s?<ol>/g, replacement: ''},                                        // fix extra ol\r\n//   {regex: /<\\/blockquote><blockquote>/g, replacement: '\\n'}                          // fix extra blockquote\r\n// ];\r\n\r\n// this.rules = [\r\n//   {\r\n//     regex: REGEX_HEADLINE, replacement: header\r\n//   },\r\n// ]\r\n\r\n/// @TODO add const for newsletter_sponsor_link\r\n// for hackernoon_logo_path\r\n// for HN socials, with images and shit\r\n\r\n// const REGEXP_H3 = /^### (.*$)/gim;\r\n// const REGEXP_H2 = /^## (.*$)/gim;\r\n// const REGEXP_H1 = /^# (.*$)/gim;\r\n// const REGEXP_BLOCKQUOTE = /^\\> (.*$)/gim;\r\n// const REGEXP_B = /\\*\\*(.*)\\*\\*/gim;\r\n// const REGEXP_I = /\\*(.*)\\*/gim;\r\n// const REGEXP_IMG = /!\\[(.*?)\\]\\((.*?)\\)/gim;\r\n// const REGEXP_A = /\\[(.*?)\\]\\((.*?)\\)/gim;\r\n// const REGEXP_BR = /\\n$/gim;\r\n\r\n// //2nd batch, related to custom markdown tags\r\n// const REGEXP_CUSTOM_LINK = /\\[(.*?)\\]\\((.*?)\\)/g;\r\n// const REGEXP_CUSTOM_MEME_IMAGE = /\\((.*?)\\)/g; // @TODO or use gim as for other cases that we have?\r\n// // const REGEXP_CUSTOM_\r\nconst {newLine} = require('./utils');\r\n\r\nconst REGEXP_HEADER = new RegExp(`${newLine}(#+)(.*)`, 'g');\r\n\r\nconst REGEXP_IMAGE = /!\\[([^\\[]+)\\]\\(([^\\)]+)\\)/g;\r\nconst REGEXP_LINK = /\\[([^\\[]+)\\]\\(([^\\)]+)\\)/g;\r\nconst REGEXP_STRONG = /(\\*\\*|__)(.*?)(\\*?)\\1/g;\r\nconst REGEXP_DEL = /\\~\\~(.*?)\\~\\~/g;\r\nconst REGEXP_Q = /\\:\\\"(.*?)\\\"\\:/g;\r\nconst REGEXP_CODE = /`(.*?)`/g;\r\n\r\nconst REGEXP_UL_LIST = new RegExp(`${newLine}(((\\\\s{4})?\\\\*(.*?)${newLine}){1,})`, 'g');\r\nconst REGEXP_OL_LIST = new RegExp(`${newLine}[0-9]+\\\\.(.*)`, 'g');\r\n\r\nconst REGEXP_BLOCKQUOTE = new RegExp(`${newLine}(&gt;|\\\\>)(.*)`, 'g');\r\nconst REGEXP_HR = new RegExp(`${newLine}-{5,}`,'g');\r\n\r\nconst REGEXP_PARAGRAPH = new RegExp(`${newLine}(.+?)${newLine}`, \"g\");\r\n\r\nconst REGEXP_EMPTY_UL = /<\\/ul>\\s?<ul>/g;\r\nconst REGEXP_EMPTY_OL = /<\\/ol>\\s?<ol>/g;\r\nconst REGEXP_BR = new RegExp(`((${newLine}){2,})`, \"g\");\r\nconst REGEXP_EMPTY_BLOCKQUOTE = /<\\/blockquote><blockquote>/g;\r\nconst REGEXP_EM = /(\\s|>)(\\*|_)(.*?)\\2(\\s|<)/g;\r\n\r\nconst REGEXP_SPONSORSHIP = /~(\\[(.*?)\\]){3}/g;\r\nconst REGEXP_HTML_COMMENTS = /<!--(([\\r\\n]|.)*?)-->/g;\r\nconst REGEXP_MEM = /\\!\\[(.*?)\\]\\[(.*?)\\]\\[(.*?)\\]/g;\r\nconst REGEXP_PREVIEW_TEXT = new RegExp(`#~(.*?)${newLine}`);\r\n// const REGEXP_H3 = /^### (.*$)/gim;\r\n// const REGEXP_H2 = /^## (.*$)/gim;\r\n\r\n\r\nexport const html_tags = {\r\n  REGEXP_HEADER,\r\n  REGEXP_IMAGE,\r\n  REGEXP_LINK,\r\n  REGEXP_STRONG,\r\n  REGEXP_DEL,\r\n  REGEXP_Q,\r\n  REGEXP_CODE,\r\n  REGEXP_UL_LIST,\r\n  REGEXP_OL_LIST,\r\n  REGEXP_BLOCKQUOTE,\r\n  REGEXP_HR,\r\n  REGEXP_PARAGRAPH,\r\n  REGEXP_EMPTY_UL,\r\n  REGEXP_EMPTY_OL,\r\n  REGEXP_BR,\r\n  REGEXP_EMPTY_BLOCKQUOTE,\r\n  REGEXP_EM,\r\n  REGEXP_SPONSORSHIP,\r\n  REGEXP_HTML_COMMENTS,\r\n  REGEXP_MEM,\r\n  REGEXP_PREVIEW_TEXT\r\n};\r\n"],"names":["require","newLine","REGEXP_HEADER","RegExp","REGEXP_IMAGE","REGEXP_LINK","REGEXP_STRONG","REGEXP_DEL","REGEXP_Q","REGEXP_CODE","REGEXP_UL_LIST","REGEXP_OL_LIST","REGEXP_BLOCKQUOTE","REGEXP_HR","REGEXP_PARAGRAPH","REGEXP_EMPTY_UL","REGEXP_EMPTY_OL","REGEXP_BR","REGEXP_EMPTY_BLOCKQUOTE","REGEXP_EM","REGEXP_SPONSORSHIP","REGEXP_HTML_COMMENTS","REGEXP_MEM","REGEXP_PREVIEW_TEXT","html_tags"],"mappings":"eA4CkBA,OAAO,CAAC,SAAD;IAAlBC,mBAAAA;;AAEP,IAAMC,aAAa,GAAG,IAAIC,MAAJ,WAAcF,OAAd,eAAiC,GAAjC,CAAtB;AAEA,IAAMG,YAAY,GAAG,4BAArB;AACA,IAAMC,WAAW,GAAG,2BAApB;AACA,IAAMC,aAAa,GAAG,wBAAtB;AACA,IAAMC,UAAU,GAAG,gBAAnB;AACA,IAAMC,QAAQ,GAAG,gBAAjB;AACA,IAAMC,WAAW,GAAG,UAApB;AAEA,IAAMC,cAAc,GAAG,IAAIP,MAAJ,WAAcF,OAAd,gCAA2CA,OAA3C,aAA4D,GAA5D,CAAvB;AACA,IAAMU,cAAc,GAAG,IAAIR,MAAJ,WAAcF,OAAd,oBAAsC,GAAtC,CAAvB;AAEA,IAAMW,iBAAiB,GAAG,IAAIT,MAAJ,WAAcF,OAAd,qBAAuC,GAAvC,CAA1B;AACA,IAAMY,SAAS,GAAG,IAAIV,MAAJ,WAAcF,OAAd,YAA6B,GAA7B,CAAlB;AAEA,IAAMa,gBAAgB,GAAG,IAAIX,MAAJ,WAAcF,OAAd,kBAA6BA,OAA7B,GAAwC,GAAxC,CAAzB;AAEA,IAAMc,eAAe,GAAG,gBAAxB;AACA,IAAMC,eAAe,GAAG,gBAAxB;AACA,IAAMC,SAAS,GAAG,IAAId,MAAJ,aAAgBF,OAAhB,aAAiC,GAAjC,CAAlB;AACA,IAAMiB,uBAAuB,GAAG,6BAAhC;AACA,IAAMC,SAAS,GAAG,4BAAlB;AAEA,IAAMC,kBAAkB,GAAG,kBAA3B;AACA,IAAMC,oBAAoB,GAAG,wBAA7B;AACA,IAAMC,UAAU,GAAG,gCAAnB;AACA,IAAMC,mBAAmB,GAAG,IAAIpB,MAAJ,kBAAqBF,OAArB,EAA5B;IAKauB,SAAS,GAAG;AACvBtB,EAAAA,aAAa,EAAbA,aADuB;AAEvBE,EAAAA,YAAY,EAAZA,YAFuB;AAGvBC,EAAAA,WAAW,EAAXA,WAHuB;AAIvBC,EAAAA,aAAa,EAAbA,aAJuB;AAKvBC,EAAAA,UAAU,EAAVA,UALuB;AAMvBC,EAAAA,QAAQ,EAARA,QANuB;AAOvBC,EAAAA,WAAW,EAAXA,WAPuB;AAQvBC,EAAAA,cAAc,EAAdA,cARuB;AASvBC,EAAAA,cAAc,EAAdA,cATuB;AAUvBC,EAAAA,iBAAiB,EAAjBA,iBAVuB;AAWvBC,EAAAA,SAAS,EAATA,SAXuB;AAYvBC,EAAAA,gBAAgB,EAAhBA,gBAZuB;AAavBC,EAAAA,eAAe,EAAfA,eAbuB;AAcvBC,EAAAA,eAAe,EAAfA,eAduB;AAevBC,EAAAA,SAAS,EAATA,SAfuB;AAgBvBC,EAAAA,uBAAuB,EAAvBA,uBAhBuB;AAiBvBC,EAAAA,SAAS,EAATA,SAjBuB;AAkBvBC,EAAAA,kBAAkB,EAAlBA,kBAlBuB;AAmBvBC,EAAAA,oBAAoB,EAApBA,oBAnBuB;AAoBvBC,EAAAA,UAAU,EAAVA,UApBuB;AAqBvBC,EAAAA,mBAAmB,EAAnBA;AArBuB;;;;"}